/* Generated By:JavaCC: Do not edit this line. TranslationUnitConstants.java */
package br.edu.ufcg.symbolrt.compiler.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TranslationUnitConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SYSTEM_TK = 7;
  /** RegularExpression Id. */
  int CONST_TK = 8;
  /** RegularExpression Id. */
  int CLOCKS_TK = 9;
  /** RegularExpression Id. */
  int GATE_TK = 10;
  /** RegularExpression Id. */
  int INT_TK = 11;
  /** RegularExpression Id. */
  int BOOL_TK = 12;
  /** RegularExpression Id. */
  int MORETHEN_TK = 13;
  /** RegularExpression Id. */
  int MORETHENEQUALS_TK = 14;
  /** RegularExpression Id. */
  int EQUALS_TK = 15;
  /** RegularExpression Id. */
  int LESSTHEN_TK = 16;
  /** RegularExpression Id. */
  int LESSTHENEQUALS_TK = 17;
  /** RegularExpression Id. */
  int DIFF_TK = 18;
  /** RegularExpression Id. */
  int EQUIV_TK = 19;
  /** RegularExpression Id. */
  int MINUS_TK = 20;
  /** RegularExpression Id. */
  int NOT_TK = 21;
  /** RegularExpression Id. */
  int AND_TK = 22;
  /** RegularExpression Id. */
  int PLUS_TK = 23;
  /** RegularExpression Id. */
  int MULT_TK = 24;
  /** RegularExpression Id. */
  int OR_TK = 25;
  /** RegularExpression Id. */
  int MOD_TK = 26;
  /** RegularExpression Id. */
  int DIV_TK = 27;
  /** RegularExpression Id. */
  int TRUE_TK = 28;
  /** RegularExpression Id. */
  int FALSE_TK = 29;
  /** RegularExpression Id. */
  int PROCESS_TK = 30;
  /** RegularExpression Id. */
  int INPUT_ACT_TK = 31;
  /** RegularExpression Id. */
  int OUTPUT_ACT_TK = 32;
  /** RegularExpression Id. */
  int INTERNAL_ACT_TK = 33;
  /** RegularExpression Id. */
  int VARIABLES_TK = 34;
  /** RegularExpression Id. */
  int STATE_TK = 35;
  /** RegularExpression Id. */
  int TRANSITION_TK = 36;
  /** RegularExpression Id. */
  int INIT_STATE_TK = 37;
  /** RegularExpression Id. */
  int FROM_TK = 38;
  /** RegularExpression Id. */
  int DEADLINE_TK = 39;
  /** RegularExpression Id. */
  int TO_TK = 40;
  /** RegularExpression Id. */
  int WHEN_TK = 41;
  /** RegularExpression Id. */
  int IF_TK = 42;
  /** RegularExpression Id. */
  int SYNK_TK = 43;
  /** RegularExpression Id. */
  int INACT_TK = 44;
  /** RegularExpression Id. */
  int OUTACT_TK = 45;
  /** RegularExpression Id. */
  int DELAYABLE_TK = 46;
  /** RegularExpression Id. */
  int EAGER_TK = 47;
  /** RegularExpression Id. */
  int LAZY_TK = 48;
  /** RegularExpression Id. */
  int DO_TK = 49;
  /** RegularExpression Id. */
  int CLOSE_PAR_TK = 50;
  /** RegularExpression Id. */
  int OPEN_PAR_TK = 51;
  /** RegularExpression Id. */
  int ASSIGNMENT = 52;
  /** RegularExpression Id. */
  int IDENTIFIER = 53;
  /** RegularExpression Id. */
  int INTEGER = 54;
  /** RegularExpression Id. */
  int LETTER = 55;
  /** RegularExpression Id. */
  int DIGIT = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"system\"",
    "\"const\"",
    "\"clocks\"",
    "\"gate\"",
    "\"int\"",
    "\"bool\"",
    "\">\"",
    "\">=\"",
    "\"=\"",
    "\"<\"",
    "\"<=\"",
    "\"<>\"",
    "\"<=>\"",
    "\"-\"",
    "\"NOT\"",
    "\"AND\"",
    "\"+\"",
    "\"*\"",
    "\"OR\"",
    "\"%\"",
    "\"/\"",
    "\"TRUE\"",
    "\"FALSE\"",
    "\"process\"",
    "\"input\"",
    "\"output\"",
    "\"internal\"",
    "\"variables\"",
    "\"state\"",
    "\"transition\"",
    "\"init\"",
    "\"from\"",
    "\"deadline\"",
    "\"to\"",
    "\"when\"",
    "\"if\"",
    "\"sync\"",
    "\"?\"",
    "\"!\"",
    "\"delayable\"",
    "\"eager\"",
    "\"lazy\"",
    "\"do\"",
    "\")\"",
    "\"(\"",
    "\":=\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<LETTER>",
    "<DIGIT>",
    "\";\"",
    "\",\"",
    "\":\"",
    "\"{\"",
    "\"|\"",
    "\"}\"",
  };

}
