system ChooseHiding;

clocks
	clockC;

gate
	InitC;
	Select(int);
	Return;
	Cash;
	Cheque;
	Shutdown;
	FinishSystem;	
	Tau;

// Specification of the main process
process ChooseHiding;

input
	Select;

output
	Return, Cash, Shutdown, FinishSystem;

internal
	InitC, Tau;

variables
	optionC: int;

state
	init : START;
	S0;
	S1;
	S2;
	S3;

transition

	// Main Scenario
	from START
		sync InitC()
	to S0;
	from S0
		sync Select?(op)
		do optionC := op
	to S1;
	from S1
		when clockC  > 10		
		sync Return!()
		do clockC := 0
	to S0;
	//pay = 1
	from S1
		when clockC  <= 10		
		if (optionC = 1)	
		sync Cash!()
	to S2;
	//pay = 2
	from S1
		when clockC  <= 10
		if (optionC = 2)		
		sync Shutdown!()
	to S2;
	from S2
		if (TRUE)
		sync FinishSystem!()
		deadline lazy	
	to S3;

process ChooseHidingTP1;
output
	FinishSystem;

internal
	InitC, Tau;

state
	init: START;
	S20;
	S21;
	Accept;

transition

	// Main Scenario
	from START
		sync InitC()
	to S20;
	from S20
		sync Tau()
	to S21;
	from S21
		sync FinishSystem!()
	to Accept;
