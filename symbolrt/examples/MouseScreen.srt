system Mouse;

clocks
	clockM, clockS;

gate
	InitM;
	InitS;
	InitM_InitS;
	Click(int);
	SimpleClick(int);
	DoubleClick(int);
	PrintMenu(int);
	OpenApp(int);	

// Specification of the main process
process Mouse;

input
	Click;

output
	SimpleClick, DoubleClick;

internal
	InitM;

variables
	coordinateM: int;

state
	init : STARTM;
	S0;
	S1;
	S2;

transition

	// Main Scenario
	from STARTM
		sync InitM()
	to S0;
	from S0
		sync Click?(position)
		do coordinateM := position
		deadline lazy
	to S1;
	from S1
		when clockM <= 2			
		if TRUE
		sync Click?(position)
		do coordinateM := position
		deadline lazy
	to S2;	
	from S2
		if (coordinateM = position)		
		sync DoubleClick!(position)
		do coordinateM := position
		deadline delayable
	to S0;	
	from S1
		when clockM > 2
		if (coordinateM = position)		
		sync SimpleClick!(position)
		do clockM := 0
		deadline eager
	to S0;

// Specification of the main process
process Screen;

input
	SimpleClick, DoubleClick;

output
	OpenApp, PrintMenu;

internal
	InitS;

variables
	coordinateS: int;

state
	init : STARTS;
	S3;
	S4;
	S5;

transition

	// Main Scenario
	from STARTS
		sync InitS()
	to S3;
	from S3
		when clockS <= 3
		if TRUE		
		sync SimpleClick?(position)
		do coordinateS := position
		deadline lazy
	to S5;
	from S3
		when clockS > 3		
		if TRUE
		sync DoubleClick?(position)
		do coordinateS := position
		deadline lazy
	to S4;
	from S5
		if (coordinateS = position)		
		sync PrintMenu!(position)
		do clockS := 0
		deadline lazy
	to S3;
	from S4
		when clockS > 6		
		if (coordinateS = position)		
		sync OpenApp!(position)
		do clockS := 0
		deadline lazy
	to S3;

process MouseScreenTP1;

output
	SimpleClick;

internal
	InitM_InitS;

state
	init: START;
	S20;
	Accept;

transition

	// Main Scenario
	from START
		sync InitM_InitS()
	to S20;
	from S20
		sync SimpleClick!(position)
	to Accept;

process MouseScreenTP2;

output
	SimpleClick, PrintMenu;

internal
	InitM_InitS;

state
	init: START;
	S20;
	S21;
	Accept;

transition

	// Main Scenario
	from START
		sync InitM_InitS()
	to S20;
	from S20
		when clockS <= 3
		if TRUE
		sync SimpleClick!(position)
	to S21;
	from S21
		sync PrintMenu!(position)
	to Accept;

process MouseScreenTP3;

output
	DoubleClick, OpenApp;

internal
	InitM_InitS;

state
	init: START;
	S20;
	S21;
	Accept;

transition

	// Main Scenario
	from START
		sync InitM_InitS()
	to S20;
	from S20
		sync DoubleClick!(position)
	to S21;
	from S21
		sync OpenApp!(position)
	to Accept;
